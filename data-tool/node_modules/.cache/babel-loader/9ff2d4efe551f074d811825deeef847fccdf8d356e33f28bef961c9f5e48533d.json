{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicpa\\\\OneDrive\\\\Desktop\\\\code\\\\d4g-data-visualisation\\\\data-tool\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport 'leaflet/dist/leaflet.css';\nimport MapComponent from './MapComponent';\nimport { useEffect, useState } from 'react';\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [allData, setAllData] = useState([]);\n  const [filter, setFilter] = useState([]);\n  const [filtering, setFiltering] = useState(false);\n  const handleFileUpload = e => {\n    const reader = new FileReader();\n    reader.readAsArrayBuffer(e.target.files[0]);\n    reader.onload = e => {\n      const data = e.target.result;\n      const workbook = XLSX.read(new Uint8Array(data), {\n        type: \"array\"\n      });\n      const sheetName = workbook.SheetNames[0];\n      const sheet = workbook.Sheets[sheetName];\n      const parsedData = XLSX.utils.sheet_to_json(sheet);\n      setData(parsedData);\n      setAllData(parsedData);\n    };\n  };\n  let markerPositions = [];\n\n  // Iterate over the data array\n  data.forEach(row => {\n    // Push an array containing latitude and longitude into the coordinates array\n    markerPositions.push([row[\"LatitudeWGS84\"], row[\"LongitudeWGS84\"]]);\n  });\n  let markers = [];\n  markerPositions.forEach((position, index) => {\n    // Create a new marker object with position and popupContent\n    const marker = {\n      position: position,\n      popupContent: `Marker ${index + 1}` // Assuming index starts from 0\n    };\n    // Add the new marker to the markers array\n    markers.push(marker);\n  });\n  useEffect(() => {}, [filtering]);\n  function filterData(fieldList) {\n    let newData = [];\n    data.forEach(row => {\n      accepted = true;\n      for (const field of WebGLShaderPrecisionFormat) if (row[field]) {\n        newData.push(row);\n      }\n    });\n    setData(newData);\n  }\n  const polylines = [{\n    coordinates: [[52.5092, 13.3801], [52.5117, 13.4020]],\n    color: \"blue\"\n  }];\n  const handleCheck = field => {\n    if (field in filter) {\n      setFilter(filter.filter(!field));\n    } else {\n      setFilter([...filter, field]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log(data.length), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".xlsx, .xls, .csv\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapComponent, {\n      markers: markers,\n      polylines: polylines\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: filter.filter(\"InvolvingBike\").length > 0,\n      onChange: handleCheck(\"InvolvingBike\"),\n      children: \"Bike\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFiltering(!filtering),\n      children: \"Filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2Do9rhEdvf/XWSCSYmNa9JkPjKo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["MapComponent","useEffect","useState","XLSX","jsxDEV","_jsxDEV","App","_s","data","setData","allData","setAllData","filter","setFilter","filtering","setFiltering","handleFileUpload","e","reader","FileReader","readAsArrayBuffer","target","files","onload","result","workbook","read","Uint8Array","type","sheetName","SheetNames","sheet","Sheets","parsedData","utils","sheet_to_json","markerPositions","forEach","row","push","markers","position","index","marker","popupContent","filterData","fieldList","newData","accepted","field","WebGLShaderPrecisionFormat","polylines","coordinates","color","handleCheck","children","console","log","length","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/nicpa/OneDrive/Desktop/code/d4g-data-visualisation/data-tool/src/App.js"],"sourcesContent":["import './App.css';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport MapComponent from './MapComponent';\r\nimport { useEffect, useState } from 'react';\r\nimport * as XLSX from \"xlsx\";\r\n\r\nfunction App() {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [allData,setAllData] = useState([])\r\n  const [filter,setFilter] = useState([])\r\n  const [filtering,setFiltering] = useState(false)\r\n\r\n\r\n  const handleFileUpload = (e) => {\r\n    const reader = new FileReader();\r\n    reader.readAsArrayBuffer(e.target.files[0]);\r\n    reader.onload = (e) => {\r\n      const data = e.target.result;\r\n      const workbook = XLSX.read(new Uint8Array(data), { type: \"array\" });\r\n      const sheetName = workbook.SheetNames[0];\r\n      const sheet = workbook.Sheets[sheetName];\r\n      const parsedData = XLSX.utils.sheet_to_json(sheet);\r\n      setData(parsedData);\r\n      setAllData(parsedData)\r\n    };\r\n  };\r\n  \r\n  let markerPositions = [];\r\n\r\n  // Iterate over the data array\r\n  data.forEach((row) => {\r\n    // Push an array containing latitude and longitude into the coordinates array\r\n    markerPositions.push([row[\"LatitudeWGS84\"], row[\"LongitudeWGS84\"]]);\r\n  });\r\n\r\n  let markers = [];\r\n  markerPositions.forEach((position, index) => {\r\n    // Create a new marker object with position and popupContent\r\n    const marker = {\r\n      position: position,\r\n      popupContent: `Marker ${index + 1}` // Assuming index starts from 0\r\n    };\r\n    // Add the new marker to the markers array\r\n    markers.push(marker);\r\n  });\r\n\r\n  useEffect(()=>{\r\n\r\n\r\n\r\n  },[filtering]\r\n  )\r\n\r\n  function filterData(fieldList){\r\n    let newData =[]\r\n    data.forEach((row)=>{\r\n        accepted=true\r\n        for (const field of WebGLShaderPrecisionFormat)\r\n        if (row[field]){\r\n          newData.push(row)\r\n        }\r\n    })\r\n    setData(newData)\r\n  }\r\n\r\n  const polylines = [\r\n    { \r\n      coordinates: [\r\n        [52.5092, 13.3801],\r\n        [52.5117, 13.4020],\r\n      ], \r\n      color: \"blue\",\r\n    }\r\n  ];\r\n\r\n  const handleCheck  = (field) =>{\r\n    if (field in filter){\r\n      setFilter(filter.filter(!field))\r\n    }else{\r\n      setFilter([...filter,field])\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    \r\n    <div>\r\n      {console.log(data.length)}\r\n      <input \r\n        type=\"file\" \r\n        accept=\".xlsx, .xls, .csv\" \r\n        onChange={handleFileUpload} \r\n      />\r\n      <MapComponent markers={markers} polylines={polylines} />\r\n      <input type='checkbox' checked={filter.filter(\"InvolvingBike\").length>0} onChange={handleCheck(\"InvolvingBike\")}>Bike</input>\r\n\r\n      <button onClick={()=>setFiltering(!filtering)}>Filter</button>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}